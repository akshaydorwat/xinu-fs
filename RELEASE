RELEASE: release notes for the current version
Embedded Xinu, Copyright (C) 2009.  All rights reserved.

$Id: RELEASE 2157 2010-01-19 00:40:07Z brylow $
----

Embedded Xinu
Version: 2.01

1. What's new in Embedded Xinu 2.01?
	1.1 IP Stack
	1.2 UDP Datagram device
	1.3 TCP Stream device
	1.4 Telnet client and server
	1.5 Web configuration interface
	1.6 Multiple platform support
2. Known Issues
3. Future Work

----------------------------
1. What's new in Embedded Xinu 2.0?
----------------------------

1.1 IP Stack
-----------------------

Support for Internet Protocol including Address Resolution Protocol (ARP),
Internet Control Message Protocol (ICMP) and IP packet routing and forwarding.

1.2 UDP Datagram device
-----------------------

Support for connection-based User Datagram Protocol (UDP) network traffic.

1.3 TCP Stream device
-----------------------

Support for reliable Transmission Control Protocol (TCP) stream traffic.

1.4 Telnet client and server
-----------------------

Telnet server allows remote network access to the Xinu shell.  See the
new shell command "telnetserver".

Telnet client allows the shell to connect to remote ports for debugging
and interaction of human-readable network protocols.

1.5 Web configuration interface
-----------------------

HTTP protocol daemon provides access to simple shell commands and
configuration of NVRAM network settings via web browser on the WRT54GL.

1.6 Multiple platform support
-----------------------

The v2.01 Embedded Xinu build system supports multiple platforms.  The
WRT54GL remains our flagship device, but v2.01 also includes preliminary
support for the WRT160NL router, and the Qemu-mipsel virtual machine.

WRT160NL support currently includes a only single wired network interface
(the LAN ports) and the serial port; the MAC address must be hardcoded
pending NVRAM support.

Qemu-mipsel support includes only the serial device.

All supported platforms include at least the "O/S teaching core" of Embedded
Xinu, which is comprised of a preemptive multitasking thread model in shared
memory, unified driver support for asynchronous devices, semaphore and mailbox
subsystems, dynamic memory management, and a command shell with internal
testsuite.  

To build for an alternate platform, change the PLATFORM variable in
compile/Makefile to one of {wrt54gl, wrt160nl, mipsel-qemu}.  Note that
building for big-endian platforms (like the 160NL) requires a big-endian
MIPS cross-compiler; run the "make realclean" target to recompile libraries
if switching architectures.

Preparing a 160NL image also requires the U-Boot "mkimage" utility.  This is
available from Cisco's GPL support site, http://www.linksysbycisco.com/gpl/.

Embedded Xinu on Qemu can be started with the command line:
qemu-system-mipsel -M mips -m 16M -kernel xinu.boot -nographic

----------------------------
2. Known Issues
----------------------------

Sending large data files over a TCP Stream currently can cause a system hang.

Telnetting from a Xinu Client to a Xinu Server results in some buffering
artifacts.

Flash support includes writing to Intel-based Flash chipsets only.  Some
Linksys WRT54GL-series routers contain AMD-based chipsets; these can currently
be read, but not erased or written to.

----------------------------
3. Future Work
----------------------------

ICMP handling currently recieves ICMP errors like "Destination Unreachable",
but there is no mechanism to communicate these back to the Xinu clients
for the application to receive.

IP Time-to-live field cannot be specified for ping or traceroute clients.

Wireless support for router platforms.

Switch and WAN port support for WRT160NL.  USB support for WRT160NL.

Networking and Disk support for the Qemu virtual machine.
